/**
 * Defines the types and interfaces related to model access.
 */

/**
 * Represents the standardized response from a model execution.
 */
export interface ModelResponse {
  /** Indicates if the model execution was successful. */
  success: boolean;
  /** The content generated by the model, if successful. */
  content?: string;
  /** Error message, if execution failed. */
  error?: string;
  /** Any additional metadata from the model or execution. */
  metadata?: Record<string, any>;
  /** The name of the model that produced this response. */
  modelName?: string;
}

/**
 * Interface for a model connector.
 * Each connector provides a unified way to interact with different types of LLMs
 * (API-based, browser-based, or local).
 */
export interface ModelConnector {
  /** The unique name of the connector (e.g., "openai-gpt4", "claude-browser"). */
  name: string;
  /** The type of the connector. */
  type: 'api' | 'browser' | 'local';

  /**
   * Checks if the model connector is available and ready for use.
   */
  isAvailable(): Promise<boolean>;

  /**
   * Executes a prompt using the connected model.
   */
  execute(prompt: string, options?: Record<string, any>): Promise<ModelResponse>;
}
